// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef LEITNERBOX_SWIFT_H
#define LEITNERBOX_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFAudio;
@import CoreData;
@import Foundation;
@import Intents;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LeitnerBox",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


@class NSCoder;

SWIFT_CLASS_NAMED("ConfigurationIntent") SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(watchos,introduced=5.0) SWIFT_AVAILABILITY(macos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=12.0)
@interface ConfigurationIntent : INIntent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class ConfigurationIntentResponse;

SWIFT_PROTOCOL_NAMED("ConfigurationIntentHandling") SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(watchos,introduced=5.0) SWIFT_AVAILABILITY(macos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=12.0)
@protocol ConfigurationIntentHandling <NSObject>
@optional
- (void)confirmConfiguration:(ConfigurationIntent * _Nonnull)intent completion:(void (^ _Nonnull)(ConfigurationIntentResponse * _Nonnull))completion;
- (void)confirmConfiguration:(ConfigurationIntent * _Nonnull)intent completion:(void (^ _Nonnull)(ConfigurationIntentResponse * _Nonnull))completionHandler SWIFT_AVAILABILITY(watchos,introduced=6.0) SWIFT_AVAILABILITY(macos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=13.0);
- (void)handleConfiguration:(ConfigurationIntent * _Nonnull)intent completion:(void (^ _Nonnull)(ConfigurationIntentResponse * _Nonnull))completion;
- (void)handleConfiguration:(ConfigurationIntent * _Nonnull)intent completion:(void (^ _Nonnull)(ConfigurationIntentResponse * _Nonnull))completionHandler SWIFT_AVAILABILITY(watchos,introduced=6.0) SWIFT_AVAILABILITY(macos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=13.0);
@end

enum ConfigurationIntentResponseCode : NSInteger;
@class NSUserActivity;

SWIFT_CLASS_NAMED("ConfigurationIntentResponse") SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(watchos,introduced=5.0) SWIFT_AVAILABILITY(macos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=12.0)
@interface ConfigurationIntentResponse : INIntentResponse
@property (nonatomic, readonly) enum ConfigurationIntentResponseCode code;
- (nonnull instancetype)initWithCode:(enum ConfigurationIntentResponseCode)code userActivity:(NSUserActivity * _Nullable)userActivity;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, ConfigurationIntentResponseCode, closed) {
  ConfigurationIntentResponseCodeUnspecified = 0,
  ConfigurationIntentResponseCodeReady = 1,
  ConfigurationIntentResponseCodeContinueInApp = 2,
  ConfigurationIntentResponseCodeInProgress = 3,
  ConfigurationIntentResponseCodeSuccess = 4,
  ConfigurationIntentResponseCodeFailure = 5,
  ConfigurationIntentResponseCodeFailureRequiringAppLaunch = 6,
};


@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("Leitner")
@interface Leitner : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class Level;
@class NSSet;

@interface Leitner (SWIFT_EXTENSION(LeitnerBox))
- (void)addLevelObject:(Level * _Nonnull)value;
- (void)removeLevelObject:(Level * _Nonnull)value;
- (void)addLevel:(NSSet * _Nonnull)values;
- (void)removeLevel:(NSSet * _Nonnull)values;
@end

@class Tag;

@interface Leitner (SWIFT_EXTENSION(LeitnerBox))
- (void)addTagObject:(Tag * _Nonnull)value;
- (void)removeTagObject:(Tag * _Nonnull)value;
- (void)addTag:(NSSet * _Nonnull)values;
- (void)removeTag:(NSSet * _Nonnull)values;
@end

@class NSDate;
@class NSString;

@interface Leitner (SWIFT_EXTENSION(LeitnerBox))
@property (nonatomic) BOOL backToTopLevel;
@property (nonatomic, copy) NSDate * _Nullable createDate;
@property (nonatomic) int64_t id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) NSSet * _Nullable level;
@property (nonatomic, strong) NSSet * _Nullable tag;
@end



SWIFT_CLASS_NAMED("Level")
@interface Level : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class Question;

@interface Level (SWIFT_EXTENSION(LeitnerBox))
- (void)addQuestionsObject:(Question * _Nonnull)value;
- (void)removeQuestionsObject:(Question * _Nonnull)value;
- (void)addQuestions:(NSSet * _Nonnull)values;
- (void)removeQuestions:(NSSet * _Nonnull)values;
@end



@interface Level (SWIFT_EXTENSION(LeitnerBox))
@property (nonatomic, copy) NSDate * _Nullable createDate;
@property (nonatomic) int32_t daysToRecommend;
@property (nonatomic) int16_t level;
@property (nonatomic, strong) Leitner * _Nullable leitner;
@property (nonatomic, strong) NSSet * _Nullable questions;
@end

@class UIActivityViewController;
@class LPLinkMetadata;

SWIFT_CLASS("_TtC10LeitnerBox19LinkMetaDataManager")
@interface LinkMetaDataManager : NSObject <UIActivityItemSource>
- (id _Nonnull)activityViewControllerPlaceholderItem:(UIActivityViewController * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)activityViewController:(UIActivityViewController * _Nonnull)_ itemForActivityType:(UIActivityType _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
- (LPLinkMetadata * _Nullable)activityViewControllerLinkMetadata:(UIActivityViewController * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("Question")
@interface Question : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class Synonym;

@interface Question (SWIFT_EXTENSION(LeitnerBox))
- (void)addSynonymsObject:(Synonym * _Nonnull)value;
- (void)removeSynonymsObject:(Synonym * _Nonnull)value;
- (void)addSynonyms:(NSSet * _Nonnull)values;
- (void)removeSynonyms:(NSSet * _Nonnull)values;
@end


@interface Question (SWIFT_EXTENSION(LeitnerBox))
- (void)addTagObject:(Tag * _Nonnull)value;
- (void)removeTagObject:(Tag * _Nonnull)value;
- (void)addTag:(NSSet * _Nonnull)values;
- (void)removeTag:(NSSet * _Nonnull)values;
@end

@class Statistic;

@interface Question (SWIFT_EXTENSION(LeitnerBox))
- (void)addStatisticsObject:(Statistic * _Nonnull)value;
- (void)removeStatisticsObject:(Statistic * _Nonnull)value;
- (void)addStatistics:(NSSet * _Nonnull)values;
- (void)removeStatistics:(NSSet * _Nonnull)values;
@end



@interface Question (SWIFT_EXTENSION(LeitnerBox))
@property (nonatomic, copy) NSString * _Nullable answer;
@property (nonatomic) BOOL completed;
@property (nonatomic, copy) NSDate * _Nullable createTime;
@property (nonatomic, copy) NSString * _Nullable detailDescription;
@property (nonatomic) BOOL favorite;
@property (nonatomic, copy) NSDate * _Nullable favoriteDate;
@property (nonatomic, copy) NSDate * _Nullable passTime;
@property (nonatomic, copy) NSString * _Nullable question;
@property (nonatomic, strong) Level * _Nullable level;
@property (nonatomic, strong) NSSet * _Nullable statistics;
@property (nonatomic, strong) NSSet * _Nullable synonyms;
@property (nonatomic, strong) NSSet * _Nullable tag;
@end

@class AVSpeechSynthesizer;
@class AVSpeechUtterance;

SWIFT_CLASS("_TtC10LeitnerBox15SearchViewModel")
@interface SearchViewModel : NSObject <AVSpeechSynthesizerDelegate>
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)_ didFinishSpeechUtterance:(AVSpeechUtterance * _Nonnull)_;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("Statistic")
@interface Statistic : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface Statistic (SWIFT_EXTENSION(LeitnerBox))
@property (nonatomic, copy) NSDate * _Nullable actionDate;
@property (nonatomic) BOOL isPassed;
@property (nonatomic, strong) Question * _Nullable question;
@end


SWIFT_CLASS_NAMED("Synonym")
@interface Synonym : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface Synonym (SWIFT_EXTENSION(LeitnerBox))
@property (nonatomic, strong) NSSet * _Nullable question;
@end


@interface Synonym (SWIFT_EXTENSION(LeitnerBox))
- (void)addQuestionObject:(Question * _Nonnull)value;
- (void)removeQuestionObject:(Question * _Nonnull)value;
- (void)addQuestion:(NSSet * _Nonnull)values;
- (void)removeQuestion:(NSSet * _Nonnull)values;
@end


SWIFT_CLASS_NAMED("Tag")
@interface Tag : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface Tag (SWIFT_EXTENSION(LeitnerBox))
- (void)addQuestionObject:(Question * _Nonnull)value;
- (void)removeQuestionObject:(Question * _Nonnull)value;
- (void)addQuestion:(NSSet * _Nonnull)values;
- (void)removeQuestion:(NSSet * _Nonnull)values;
@end


@interface Tag (SWIFT_EXTENSION(LeitnerBox))
@property (nonatomic, strong) NSObject * _Nullable color;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) Leitner * _Nullable leitner;
@property (nonatomic, strong) NSSet * _Nullable question;
@end



SWIFT_CLASS_NAMED("UIColorValueTransformer")
@interface UIColorValueTransformer : NSValueTransformer
+ (Class _Nonnull)transformedValueClass SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)allowsReverseTransformation SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)transformedValue:(id _Nullable)value SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)reverseTransformedValue:(id _Nullable)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
